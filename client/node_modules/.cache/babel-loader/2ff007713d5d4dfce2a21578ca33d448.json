{"ast":null,"code":"import _classCallCheck from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/asmith/Documents/cs364/bandtrees/client/src/components/Search/Search_Container.js\";\n\n/*\r\n * Authors: Austin Vanburen\r\n * Description: Container for SearchBox component. Connects HTML code (component) to our react-redux framework.\r\n * - Search results show up in real time, offering a list of artists who's name matches the given string.\r\n * - Clicking upon an Artist triggers the creation of an Inspiration Tree.\r\n */\n//React-Redux Boilerplate\nimport React, { Component } from 'react';\nimport { bindActionCreator } from 'redux';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //Imported Components(Compnent HTML Injections && Containers)\n\nimport SearchBox from './SearchBox_Component.js'; //Imported React-Strap components\n\nimport { Button } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap'; //Imported Actions\n\nimport { setSearchField } from '../../actions/Search_Actions.js';\nimport { searchArtists } from '../../actions/Search_Actions.js';\nimport { setTop } from '../../actions/App_Actions.js';\nimport { setBottom } from '../../actions/App_Actions.js'; //Allows access to our storage. Storage -> Property\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artists: state.search.artists,\n    searchField: state.search.searchField\n  };\n}; //Allows access to our actions. Action -> Property.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onSearchChange: setSearchField,\n    searchArtists: searchArtists,\n    setTop: setTop,\n    setBottom: setBottom\n  }, dispatch);\n}; //HTML rendered code.\n\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props)); //Binds Local Functions\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))); //Local State\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.setTop('s');\n      this.props.setBottom('l');\n      this.props.searchArtists(this.props.searchField);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      //console.log(event.currentTarget.value);\n      event.preventDefault();\n      this.props.onSearchChange(event.currentTarget.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        searchChange: function searchChange(event) {\n          return _this2.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick(event) {\n          return _this2.handleClick(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Search\"), ' ')));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/components/Search/Search_Container.js"],"names":["React","Component","bindActionCreator","connect","bindActionCreators","SearchBox","Button","Container","Row","Col","setSearchField","searchArtists","setTop","setBottom","mapStateToProps","state","artists","search","searchField","mapDispatchToProps","dispatch","onSearchChange","Search","props","handleClick","bind","event","preventDefault","currentTarget","value","handleChange"],"mappings":";;;;;;;;AAAA;;;;;;AAOA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,iBAAR,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC,C,CAEA;;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,aAAR,QAA6B,iCAA7B;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,SAAQC,SAAR,QAAwB,8BAAxB,C,CAEA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAM;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaD,OADjB;AAELE,IAAAA,WAAW,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAFrB,GAAN;AAIA,CALD,C,CAOA;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAOhB,kBAAkB,CAAC;AACzBiB,IAAAA,cAAc,EAAEX,cADS;AAEzBC,IAAAA,aAAa,EAAEA,aAFU;AAGzBC,IAAAA,MAAM,EAAEA,MAHiB;AAIzBC,IAAAA,SAAS,EAAEA;AAJc,GAAD,EAKtBO,QALsB,CAAzB;AAMA,CAPD,C,CASA;;;IACME,M;;;;;AACL,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN,GADe,CAGf;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB,CAJe,CAMf;;AACA,UAAKV,KAAL,GAAa,EAAb;AAPe;AAShB;;;;gCAESW,K,EAAO;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKJ,KAAL,CAAWX,MAAX,CAAkB,GAAlB;AACA,WAAKW,KAAL,CAAWV,SAAX,CAAqB,GAArB;AACA,WAAKU,KAAL,CAAWZ,aAAX,CAAyB,KAAKY,KAAL,CAAWL,WAApC;AACA;;;iCAEYQ,K,EAAO;AACnB;AACAA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKJ,KAAL,CAAWF,cAAX,CAA0BK,KAAK,CAACE,aAAN,CAAoBC,KAA9C;AACA;;;6BAEQ;AAAA;;AACR,aACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,sBAACH,KAAD;AAAA,iBAAW,MAAI,CAACI,YAAL,CAAkBJ,KAAlB,CAAX;AAAA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,EAIG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,iBAACA,KAAD;AAAA,iBAAW,MAAI,CAACF,WAAL,CAAiBE,KAAjB,CAAX;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EACsF,GADtF,CAJH,CADF,CADN;AAYA;;;;EAtCmB1B,KAAK,CAACC,S;;AAyC3B,eAAeE,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CG,MAA7C,CAAf","sourcesContent":["/*\r\n * Authors: Austin Vanburen\r\n * Description: Container for SearchBox component. Connects HTML code (component) to our react-redux framework.\r\n * - Search results show up in real time, offering a list of artists who's name matches the given string.\r\n * - Clicking upon an Artist triggers the creation of an Inspiration Tree.\r\n */\r\n\r\n//React-Redux Boilerplate\r\nimport React, {Component} from 'react';\r\nimport {bindActionCreator} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\n//Imported Components(Compnent HTML Injections && Containers)\r\nimport SearchBox from './SearchBox_Component.js';\r\n\r\n//Imported React-Strap components\r\nimport { Button } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n//Imported Actions\r\nimport {setSearchField} from '../../actions/Search_Actions.js';\r\nimport {searchArtists}  from '../../actions/Search_Actions.js';\r\nimport {setTop} from '../../actions/App_Actions.js';\r\nimport {setBottom} from '../../actions/App_Actions.js';\r\n\r\n//Allows access to our storage. Storage -> Property\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n\t\tartists: state.search.artists,\r\n\t\tsearchField: state.search.searchField,\r\n\t}\r\n}\r\n\r\n//Allows access to our actions. Action -> Property.\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\tonSearchChange: setSearchField,\r\n\t\tsearchArtists: searchArtists,\r\n\t\tsetTop: setTop,\r\n\t\tsetBottom: setBottom,\r\n\t}, dispatch);\r\n}\r\n\r\n//HTML rendered code.\r\nclass Search extends React.Component{\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\r\n\t    //Binds Local Functions\r\n\t    this.handleClick = this.handleClick.bind(this);\r\n\r\n\t    //Local State\r\n    \tthis.state = {\r\n    \t};\r\n  \t}\r\n\r\n\thandleClick(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.setTop('s');\r\n\t\tthis.props.setBottom('l');\r\n\t\tthis.props.searchArtists(this.props.searchField);\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\t//console.log(event.currentTarget.value);\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSearchChange(event.currentTarget.value);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t      \t<Container>\r\n\t        \t<Row>\r\n\t          \t\t<Col>\r\n\t          \t\t\t<SearchBox searchChange={(event) => this.handleChange(event)}></SearchBox>\r\n\t          \t\t</Col>\r\n\t          \t\t<Col>\r\n\t          \t\t\t<Button color=\"primary\" onClick={(event) => this.handleClick(event)}>Search</Button>{' '}\r\n\t          \t\t</Col>\r\n\t        \t</Row>\r\n\t      \t</Container>\r\n      \t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n\r\n\r\n\r\n \t\r\n\r\n"]},"metadata":{},"sourceType":"module"}