{"ast":null,"code":"import _classCallCheck from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/asmith/Documents/cs364/bandtrees/client/src/App.js\";\n\n/*\r\n * Authors: Austin Vanburen, Andrew Smith\r\n * Description: Serves as the root component for our application.\r\n */\n//Boiler plate\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //Imported CSS\n\nimport './App.css'; //React-Strap Components\n\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Table } from 'reactstrap'; //Imported Components\n\nimport Box from './components/SpotifyQueryEntry/SpotifyQueryEntry_Container.js';\nimport FilterBar from './components/FilterBar/FilterBar_Container.js';\nimport ListOfArtists from './components/ListOfArtists/ListOfArtists_Container.js';\nimport Search from './components/Search/Search_Container.js';\nimport BioPane from './components/BioPane/BioPane_Container.js'; //Allows access to data stored from our reducer. See rootReducer for more information.\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.search.searchField,\n    top: state.app.top,\n    bottom: state.app.bottom,\n    songs: state.bio.songs\n  };\n}; //Primary HTML rendered on our webpage. Additional imported components may be rendered.\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isOpen: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTop = _this.renderTop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderBottom = _this.renderBottom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderSongs = _this.renderSongs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Band Trees\"), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderTop()), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderBottom()));\n    }\n  }, {\n    key: \"renderTop\",\n    value: function renderTop() {\n      switch (this.props.top) {\n        case 'w':\n          return React.createElement(Jumbotron, {\n            fluid: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            className: \"display-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"Welcome\"), React.createElement(\"p\", {\n            className: \"lead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"Discover new artists related to those you already love\"));\n\n        case 's':\n          return React.createElement(Jumbotron, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            className: \"searchHeader\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"Results for \\\"\", this.props.searchField, \"\\\"\"));\n\n        case 'b':\n          //<FilterBar></FilterBar>\n          return React.createElement(Container, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }), React.createElement(BioPane, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }), React.createElement(Table, {\n            bordered: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"caption\", {\n            id: \"songsTable\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"Selected Songs\"), React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"Song Title\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"Album\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"Year\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"Genre\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, this.renderSongs())), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }));\n      }\n    }\n    /* songs[] where\r\n     * \tsong = {   SongId: int,\r\n     *\t\t\t   SongName: string,\r\n     *             AlbumName: string,\r\n     *\t\t\t   AlbumYear: int,\r\n     *             GenreName: string\r\n     * \t\t\t }\r\n     */\n\n  }, {\n    key: \"renderSongs\",\n    value: function renderSongs() {\n      return this.props.songs.map(function (song, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, song.SongName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, song.AlbumName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, song.AlbumYear), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, song.GenreName));\n      });\n    }\n  }, {\n    key: \"renderBottom\",\n    value: function renderBottom() {\n      switch (this.props.bottom) {\n        case 'e':\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          });\n\n        case 'l':\n          return React.createElement(Container, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, React.createElement(ListOfArtists, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/App.js"],"names":["React","Component","connect","Jumbotron","Container","Row","Col","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Table","Box","FilterBar","ListOfArtists","Search","BioPane","mapStateToProps","state","searchField","search","top","app","bottom","songs","bio","App","props","isOpen","toggle","bind","renderTop","renderBottom","renderSongs","setState","map","song","i","SongName","AlbumName","AlbumYear","GenreName"],"mappings":"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","sourcesContent":["/*\r\n * Authors: Austin Vanburen, Andrew Smith\r\n * Description: Serves as the root component for our application.\r\n */\r\n\r\n//Boiler plate\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n//Imported CSS\r\nimport './App.css';\r\n\r\n//React-Strap Components\r\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\n\r\n//Imported Components\r\nimport Box from './components/SpotifyQueryEntry/SpotifyQueryEntry_Container.js'\r\n\r\nimport FilterBar from './components/FilterBar/FilterBar_Container.js'\r\nimport ListOfArtists from './components/ListOfArtists/ListOfArtists_Container.js'\r\nimport Search from './components/Search/Search_Container.js'\r\nimport BioPane from './components/BioPane/BioPane_Container.js'\r\n\r\n//Allows access to data stored from our reducer. See rootReducer for more information.\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.search.searchField,\r\n    top: state.app.top,\r\n    bottom: state.app.bottom,\r\n    songs: state.bio.songs,\r\n  }\r\n}\r\n\r\n//Primary HTML rendered on our webpage. Additional imported components may be rendered.\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.renderTop = this.renderTop.bind(this);\r\n    this.renderBottom = this.renderBottom.bind(this);\r\n    this.renderSongs = this.renderSongs.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Band Trees</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <Search></Search>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n      <Container>{this.renderTop()}</Container>\r\n      <Container>{this.renderBottom()}</Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTop() {\r\n    switch (this.props.top) {\r\n      case 'w':\r\n        return (\r\n            <Jumbotron fluid>\r\n                <h1 className='display-3'>Welcome</h1>\r\n                <p className='lead'>Discover new artists related to those you already love</p>\r\n            </Jumbotron>\r\n        )\r\n\r\n      case 's':\r\n        return (\r\n            <Jumbotron>\r\n                <h1 className=\"searchHeader\">Results for \"{this.props.searchField}\"</h1>\r\n            </Jumbotron>\r\n        )\r\n\r\n      case 'b': //<FilterBar></FilterBar>\r\n        return (\r\n            <Container>\r\n              <Row></Row>\r\n              <BioPane></BioPane>\r\n                <Row></Row>\r\n                <Table bordered>\r\n                  <caption id='songsTable'>Selected Songs</caption>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Song Title</th>\r\n                      <th>Album</th>\r\n                      <th>Year</th>\r\n                      <th>Genre</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.renderSongs()}</tbody>\r\n                </Table>\r\n                <Row></Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n  }\r\n\r\n/* songs[] where\r\n * \tsong = {   SongId: int,\r\n *\t\t\t   SongName: string,\r\n *             AlbumName: string,\r\n *\t\t\t   AlbumYear: int,\r\n *             GenreName: string\r\n * \t\t\t }\r\n */\r\n  renderSongs() {\r\n      return this.props.songs.map((song, i) => {\r\n          return(\r\n              <tr key={i}>\r\n                <td>{song.SongName}</td>\r\n                <td>{song.AlbumName}</td>\r\n                <td>{song.AlbumYear}</td>\r\n                <td>{song.GenreName}</td>\r\n              </tr>\r\n          );\r\n      });\r\n  }\r\n\r\n  renderBottom() {\r\n    switch (this.props.bottom) {\r\n      case 'e':\r\n        return (\r\n          <div>\r\n          </div>\r\n        )\r\n      case 'l':\r\n        return (\r\n          <Container>\r\n            <ListOfArtists></ListOfArtists>\r\n          </Container>\r\n        )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}