{"ast":null,"code":"import _classCallCheck from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/asmith/Documents/cs364/bandtrees/client/src/components/FilterBar/FilterBar_Container.js\";\n\n/*\n * Authors: Austin Vanburen\n * Description: Container for FilterBar component. Connects HTML code (component) to our react-redux framework.\n * - Upon clicking button, string is sent to our server, which uses REST API principles to obtain data from spotify.\n * - Provides radial buttons for the folllowing search criteria:\n * - - Ignore Covers, Ignore Features, Filter Dates\n * - - Filter Dates, when true allows editing on \"year\" text boxes.\n * - Provides drop down button (\"Search\") with the following options:\n * - - \"Inspirations\", \"Inspirations for\"\n */\n//React-Redux Boilerplate\nimport React, { Component } from 'react';\nimport { bindActionCreator } from 'redux';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //Imported Components(Compnent HTML Injections && Containers)\n//Imported React-Strap components\n\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'; //Imported Actions\n\nimport { queryInspo } from '../../actions/FilterBar_Actions.js';\nimport { queryInspoFor } from '../../actions/FilterBar_Actions.js'; //Allows access to our storage. Storage -> Property\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artistId: state.bio.ArtistId\n  };\n}; //Allows access to our actions. Action -> Property.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    queryInspo: queryInspo,\n    queryInspoFor: queryInspoFor\n  }, dispatch);\n}; //HTML rendered code.\n\n\nvar FilterBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterBar, _React$Component);\n\n  function FilterBar(props) {\n    var _this;\n\n    _classCallCheck(this, FilterBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterBar).call(this, props)); //Binds Local Functions\n\n    _this.toggleDrop = _this.toggleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFilterDates = _this.toggleFilterDates.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFilterFeatures = _this.toggleFilterFeatures.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFilterCovers = _this.toggleFilterCovers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStartDateChange = _this.handleStartDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEndDateChange = _this.handleEndDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearchInspo = _this.handleSearchInspo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearchFor = _this.handleSearchFor.bind(_assertThisInitialized(_assertThisInitialized(_this))); //Refs for uncontrolled components.\n    //this.startInput = React.createRef();\n    //Local State\n\n    _this.state = {\n      dropdownOpen: false,\n      filterDates: false,\n      filterFeatures: false,\n      filterCovers: false,\n      dateStart: \"2019\",\n      dateEnd: \"2019\"\n    };\n    return _this;\n  } //TODO: bug, onChange triggered  and sends previously stored value.\n\n\n  _createClass(FilterBar, [{\n    key: \"toggleDrop\",\n    value: function toggleDrop() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"toggleFilterDates\",\n    value: function toggleFilterDates() {\n      this.setState({\n        filterDates: !this.state.filterDates\n      });\n    }\n  }, {\n    key: \"toggleFilterFeatures\",\n    value: function toggleFilterFeatures() {\n      this.setState({\n        filterFeatures: !this.state.filterFeatures\n      });\n    }\n  }, {\n    key: \"toggleFilterCovers\",\n    value: function toggleFilterCovers() {\n      this.setState({\n        filterCovers: !this.state.filterCovers\n      });\n    }\n  }, {\n    key: \"handleStartDateChange\",\n    value: function handleStartDateChange(value) {\n      //console.log(this.startInput);\n      this.setState({\n        dateStart: value\n      });\n      console.log(this.state); //TODO REMOVE\n    }\n  }, {\n    key: \"handleEndDateChange\",\n    value: function handleEndDateChange(value) {\n      this.setState({\n        dateEnd: value\n      });\n      console.log(this.state); //TODO REMOVE\n    }\n  }, {\n    key: \"handleSearchInspo\",\n    value: function handleSearchInspo() {\n      this.props.queryInspo(this.props.artistID, this.state);\n    }\n  }, {\n    key: \"handleSearchFor\",\n    value: function handleSearchFor() {\n      this.props.queryInspoFor(this.props.artistID, this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Filter:\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"coverBox\",\n        onClick: this.toggleFilterCovers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), ' ', \"Ignore Covers\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"filterBox\",\n        onClick: this.toggleFilterFeatures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), ' ', \"Ignore Features\")), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"dateBox\",\n        onClick: this.toggleFilterDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), ' ', \"Filter Dates:\", React.createElement(Input, {\n        type: \"number\",\n        name: \"yearStart\",\n        id: \"yearStart\",\n        disabled: !this.state.filterDates,\n        value: this.state.dateStart,\n        onChange: function onChange(e) {\n          return _this2.handleStartDateChange(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \"-\", React.createElement(Input, {\n        type: \"number\",\n        name: \"yearEnd\",\n        id: \"yearEnd\",\n        disabled: !this.state.filterDates,\n        value: this.state.dateEnd,\n        onChange: function onChange(e) {\n          return _this2.handleEndDateChange(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Search\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Artist: \"), React.createElement(DropdownItem, {\n        onClick: this.handleSearchInspo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Inspirations\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        onClick: this.handleSearchFor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Inspirations For\"))));\n    }\n  }]);\n\n  return FilterBar;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBar);","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/components/FilterBar/FilterBar_Container.js"],"names":["React","Component","bindActionCreator","connect","bindActionCreators","Button","Form","FormGroup","Label","Input","FormText","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","queryInspo","queryInspoFor","mapStateToProps","state","artistId","bio","ArtistId","mapDispatchToProps","dispatch","FilterBar","props","toggleDrop","bind","toggleFilterDates","toggleFilterFeatures","toggleFilterCovers","handleStartDateChange","handleEndDateChange","handleSearchInspo","handleSearchFor","dropdownOpen","filterDates","filterFeatures","filterCovers","dateStart","dateEnd","setState","value","console","log","artistID","e","target"],"mappings":"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","sourcesContent":["/*\n * Authors: Austin Vanburen\n * Description: Container for FilterBar component. Connects HTML code (component) to our react-redux framework.\n * - Upon clicking button, string is sent to our server, which uses REST API principles to obtain data from spotify.\n * - Provides radial buttons for the folllowing search criteria:\n * - - Ignore Covers, Ignore Features, Filter Dates\n * - - Filter Dates, when true allows editing on \"year\" text boxes.\n * - Provides drop down button (\"Search\") with the following options:\n * - - \"Inspirations\", \"Inspirations for\"\n */\n\n//React-Redux Boilerplate\nimport React, {Component} from 'react';\nimport {bindActionCreator} from 'redux';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\n//Imported Components(Compnent HTML Injections && Containers)\n\n//Imported React-Strap components\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n//Imported Actions\nimport {queryInspo} from '../../actions/FilterBar_Actions.js';\nimport {queryInspoFor} from '../../actions/FilterBar_Actions.js';\n\n//Allows access to our storage. Storage -> Property\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tartistId: state.bio.ArtistId,\n\t}\n}\n\n//Allows access to our actions. Action -> Property.\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tqueryInspo: queryInspo,\n\t\tqueryInspoFor: queryInspoFor,\n\t}, dispatch);\n}\n\n//HTML rendered code.\nclass FilterBar extends React.Component{\n\tconstructor(props) {\n\t    super(props);\n\n\t    //Binds Local Functions\n\t    this.toggleDrop = this.toggleDrop.bind(this);\n\t    this.toggleFilterDates = this.toggleFilterDates.bind(this);\n\t    this.toggleFilterFeatures = this.toggleFilterFeatures.bind(this);\n\t    this.toggleFilterCovers = this.toggleFilterCovers.bind(this);\n\t    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n\t    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n\t    this.handleSearchInspo = this.handleSearchInspo.bind(this);\n\t    this.handleSearchFor = this.handleSearchFor.bind(this);\n\t    //Refs for uncontrolled components.\n\t    //this.startInput = React.createRef();\n\n\t    //Local State\n    \tthis.state = {\n      \t\tdropdownOpen: false,\n      \t\tfilterDates: false,\n      \t\tfilterFeatures: false,\n      \t\tfilterCovers: false,\n      \t\tdateStart: \"2019\",\n      \t\tdateEnd: \"2019\",\n    \t};\n  \t}\n  \t//TODO: bug, onChange triggered  and sends previously stored value.\n  \ttoggleDrop() {\n\t    this.setState({\n\t      \tdropdownOpen: !this.state.dropdownOpen\n\t    });\n\t}\n\n\ttoggleFilterDates() {\n\t\tthis.setState({\n\t\t\tfilterDates: !this.state.filterDates\n\t\t});\n\t}\n\n\ttoggleFilterFeatures() {\n\t\tthis.setState({\n\t\t\tfilterFeatures: !this.state.filterFeatures\n\t\t});\n\t}\n\n\ttoggleFilterCovers() {\n\t\tthis.setState({\n\t\t\tfilterCovers: !this.state.filterCovers\n\t\t});\n\t}\n\n\thandleStartDateChange(value) {\n\t\t//console.log(this.startInput);\n\t\tthis.setState({\n\t\t\tdateStart: value,\n\t\t});\n\t\tconsole.log(this.state);//TODO REMOVE\n\t}\n\n\thandleEndDateChange(value) {\n\t\tthis.setState({\n\t\t\tdateEnd: value,\n\t\t});\n\t\tconsole.log(this.state);//TODO REMOVE\n\t}\n\n  \thandleSearchInspo() {\n  \t\tthis.props.queryInspo(this.props.artistID, this.state);\n  \t}\n\n  \thandleSearchFor() {\n  \t\tthis.props.queryInspoFor(this.props.artistID, this.state);\n  \t}\n\n\trender() { \n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<legend>Filter:</legend>\n\t\t        <FormGroup check>\n\t\t            <Label check>\n\t\t              \t<Input type=\"checkbox\" name=\"coverBox\" onClick={this.toggleFilterCovers}/>{' '}\n\t\t            \tIgnore Covers\n\t\t            </Label>\n\t\t        </FormGroup>\n\t\t        <FormGroup check>\n\t\t            <Label check>\n\t\t            \t<Input type=\"checkbox\" name=\"filterBox\" onClick={this.toggleFilterFeatures}/>{' '}\n\t\t            \tIgnore Features\n\t\t            </Label>\n\t\t        </FormGroup>\n\t\t        <FormGroup check>\n\t\t            <Label check>\n\t\t            \t<Input type=\"checkbox\" name=\"dateBox\" onClick={this.toggleFilterDates}/>{' '}\n\t\t            \tFilter Dates: \n\t\t            \t<Input type=\"number\" name=\"yearStart\" id=\"yearStart\" disabled={!this.state.filterDates}\n\t\t            \tvalue={this.state.dateStart} onChange={e => this.handleStartDateChange(e.target.value)}/>\n\t\t            \t-\n\t\t            \t<Input type=\"number\" name=\"yearEnd\" id=\"yearEnd\" disabled={!this.state.filterDates}\n\t\t            \tvalue={this.state.dateEnd} onChange={e => this.handleEndDateChange(e.target.value)}/>\n\t\t            </Label>\n\t        \t</FormGroup>\n\t\t        \t<ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDrop}>\n\t\t\t\t        <DropdownToggle caret>\n\t\t\t\t          \tSearch\n\t\t\t\t        </DropdownToggle>\n\t\t\t\t        <DropdownMenu>\n\t\t\t\t          \t<DropdownItem header>Artist: </DropdownItem>\n\t\t\t\t          \t<DropdownItem onClick={this.handleSearchInspo}\n\t\t\t\t          \t>Inspirations</DropdownItem>\n\t\t\t\t          \t<DropdownItem divider />\n\t\t\t\t          \t<DropdownItem onClick={this.handleSearchFor}\n\t\t\t\t          \t>Inspirations For</DropdownItem>\n\t\t\t\t        </DropdownMenu>\n\t      \t\t</ButtonDropdown>\n          \t</Form>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBar);\n\n\n\n \t\n\n"]},"metadata":{},"sourceType":"module"}