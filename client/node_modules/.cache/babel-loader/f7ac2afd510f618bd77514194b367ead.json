{"ast":null,"code":"import _classCallCheck from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/asmith/Documents/cs364/bandtrees/client/src/components/ListOfArtists/ListOfArtists_Container.js\";\n\n/*\r\n * Authors: Austin Vanburen\r\n * Description: Container for ListOfArtists component. Connects HTML code (component) to our react-redux framework.\r\n * - List of artists, be it for an inspiration tree, or for an artist search results.\r\n * - Clicking upon an Artist fetches a bio.\r\n */\n//React-Redux Boilerplate\nimport React, { Component } from 'react';\nimport { bindActionCreator } from 'redux';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //Imported Components(Compnent HTML Injections && Containers)\n//Imported Actions\n\nimport { clearSearch } from '../../actions/ListOfArtists_Actions.js';\nimport { fetchBio } from '../../actions/ListOfArtists_Actions.js';\nimport { fetchRelated } from '../../actions/ListOfArtists_Actions.js';\nimport { fetchSongs } from '../../actions/ListOfArtists_Actions.js';\nimport { setTop } from '../../actions/App_Actions.js';\nimport { ListGroup, ListGroupItem } from 'reactstrap'; //Allows access to our storage. Storage -> Property\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artists: state.search.artists\n  };\n}; //Allows access to our actions. Action -> Property.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchBio: fetchBio,\n    fetchSongs: fetchSongs,\n    fetchRelated: fetchRelated,\n    clearSearch: clearSearch,\n    setTop: setTop\n  }, dispatch);\n}; //HTML rendered code.\n\n\nvar ListOfArtists =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListOfArtists, _React$Component);\n\n  function ListOfArtists(props) {\n    var _this;\n\n    _classCallCheck(this, ListOfArtists);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListOfArtists).call(this, props)); //Binds Local Functions\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderArtists = _this.renderArtists.bind(_assertThisInitialized(_assertThisInitialized(_this))); //Local State\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ListOfArtists, [{\n    key: \"handleClick\",\n    value: function handleClick(event, artistId) {\n      //event.preventDefault();\n      this.props.fetchBio(artistId);\n      this.props.fetchSongs(artistId);\n      this.props.fetchRelated(artistId);\n      this.props.setTop('b'); //this.props.clearSearch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Related Artists\", React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.renderArtists()));\n    } //\tArtistId, AritstName\n\n  }, {\n    key: \"renderArtists\",\n    value: function renderArtists() {\n      var _this2 = this;\n\n      return this.props.artists.map(function (artist, i) {\n        return React.createElement(ListGroupItem, {\n          onClick: function onClick(e) {\n            return _this2.handleClick(e, artist.ArtistId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, artist.ArtistName);\n      });\n    }\n  }]);\n\n  return ListOfArtists;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfArtists);","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/components/ListOfArtists/ListOfArtists_Container.js"],"names":["React","Component","bindActionCreator","connect","bindActionCreators","clearSearch","fetchBio","fetchRelated","fetchSongs","setTop","ListGroup","ListGroupItem","mapStateToProps","state","artists","search","mapDispatchToProps","dispatch","ListOfArtists","props","handleClick","bind","renderArtists","event","artistId","map","artist","i","e","ArtistId","ArtistName"],"mappings":";;;;;;;;AAAA;;;;;;AAOA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,iBAAR,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC,C,CAEA;AAEA;;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,SAAQC,QAAR,QAAuB,wCAAvB;AACA,SAAQC,YAAR,QAA2B,wCAA3B;AACA,SAAQC,UAAR,QAAyB,wCAAzB;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAwC,YAAxC,C,CAGA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAM;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaD;AADjB,GAAN;AAGA,CAJD,C,CAMA;;;AACA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAOb,kBAAkB,CAAC;AACzBE,IAAAA,QAAQ,EAAEA,QADe;AAEzBE,IAAAA,UAAU,EAAEA,UAFa;AAGzBD,IAAAA,YAAY,EAAEA,YAHW;AAIzBF,IAAAA,WAAW,EAAEA,WAJY;AAKzBI,IAAAA,MAAM,EAAEA;AALiB,GAAD,EAMtBQ,QANsB,CAAzB;AAOA,CARD,C,CAUA;;;IACMC,a;;;;;AACL,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN,GADe,CAGf;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACG,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB,CALY,CAMf;;AACA,UAAKR,KAAL,GAAa,EAAb;AAPe;AAShB;;;;gCAEWU,K,EAAOC,Q,EAAU;AAC5B;AACA,WAAKL,KAAL,CAAWb,QAAX,CAAoBkB,QAApB;AACA,WAAKL,KAAL,CAAWX,UAAX,CAAsBgB,QAAtB;AACA,WAAKL,KAAL,CAAWZ,YAAX,CAAwBiB,QAAxB;AACA,WAAKL,KAAL,CAAWV,MAAX,CAAkB,GAAlB,EAL4B,CAM5B;AACA;;;6BAES;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,KAAKa,aAAL,EAAZ,CADA,CADJ;AAKH,K,CAEF;;;;oCACc;AAAA;;AACf,aAAO,KAAKH,KAAL,CAAWL,OAAX,CAAmBW,GAAnB,CAAuB,UAACC,MAAD,EAASC,CAAT,EAAe;AAC5C,eACa,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,mBAAO,MAAI,CAACR,WAAL,CAAiBQ,CAAjB,EAAoBF,MAAM,CAACG,QAA3B,CAAP;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,MAAM,CAACI,UADV,CADb;AAKA,OANM,CAAP;AAOA;;;;EAtC0B9B,KAAK,CAACC,S;;AAyClC,eAAeE,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CE,aAA7C,CAAf","sourcesContent":["/*\r\n * Authors: Austin Vanburen\r\n * Description: Container for ListOfArtists component. Connects HTML code (component) to our react-redux framework.\r\n * - List of artists, be it for an inspiration tree, or for an artist search results.\r\n * - Clicking upon an Artist fetches a bio.\r\n */\r\n\r\n//React-Redux Boilerplate\r\nimport React, {Component} from 'react';\r\nimport {bindActionCreator} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\n//Imported Components(Compnent HTML Injections && Containers)\r\n\r\n//Imported Actions\r\nimport {clearSearch} from '../../actions/ListOfArtists_Actions.js';\r\nimport {fetchBio} from '../../actions/ListOfArtists_Actions.js';\r\nimport {fetchRelated} from '../../actions/ListOfArtists_Actions.js';\r\nimport {fetchSongs} from '../../actions/ListOfArtists_Actions.js';\r\nimport {setTop} from '../../actions/App_Actions.js';\r\nimport { ListGroup, ListGroupItem} from 'reactstrap';\r\n\r\n\r\n//Allows access to our storage. Storage -> Property\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n\t\tartists: state.search.artists,\r\n\t}\r\n}\r\n\r\n//Allows access to our actions. Action -> Property.\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\tfetchBio: fetchBio,\r\n\t\tfetchSongs: fetchSongs,\r\n\t\tfetchRelated: fetchRelated,\r\n\t\tclearSearch: clearSearch,\r\n\t\tsetTop: setTop,\r\n\t}, dispatch);\r\n}\r\n\r\n//HTML rendered code.\r\nclass ListOfArtists extends React.Component{\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\r\n\t    //Binds Local Functions\r\n\t    this.handleClick = this.handleClick.bind(this);\r\n        this.renderArtists = this.renderArtists.bind(this);\r\n\t    //Local State\r\n    \tthis.state = {\r\n    \t};\r\n  \t}\r\n\r\n  \thandleClick(event, artistId) {\r\n  \t\t//event.preventDefault();\r\n  \t\tthis.props.fetchBio(artistId);\r\n  \t\tthis.props.fetchSongs(artistId);\r\n  \t\tthis.props.fetchRelated(artistId);\r\n  \t\tthis.props.setTop('b');\r\n  \t\t//this.props.clearSearch();\r\n  \t}\r\n\r\n    render() {\r\n        return (\r\n            <div>Related Artists\r\n            <ListGroup>{this.renderArtists()}</ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n  \t//\tArtistId, AritstName\r\n\trenderArtists() {\r\n\t\treturn this.props.artists.map((artist, i) => {\r\n\t\t\treturn(\r\n                <ListGroupItem onClick={(e) => this.handleClick(e, artist.ArtistId)}>\r\n                  {artist.ArtistName}\r\n                </ListGroupItem>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfArtists);\r\n"]},"metadata":{},"sourceType":"module"}