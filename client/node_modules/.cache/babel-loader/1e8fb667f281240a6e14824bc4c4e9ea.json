{"ast":null,"code":"import _objectSpread from \"/Users/asmith/Documents/cs364/bandtrees/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\r\n * Authors: Austin Vanburen\r\n * Description: Stored information for the BioPane component. Accessed via the properties set in the initialState.\r\n */\n//Data about an artist to be shown in the Bio Pane.\n// from Artist Table: ArtistId, DateStart, ArtistName, ImageURL, ArtistHref\n// selectedAlbums[]: AlbumId, AlbumType, AlbumHref, ReleaseDate, AlbumName\n// selectedTracks[]: TrackId, Href, TrackName\nvar initialState = {\n  ArtistId: -1,\n  ArtistName: '',\n  YearStart: 0,\n  YearEnd: 0,\n  songs: []\n  /* Data Retrieved:\r\n   * \tArtist = { ArtistId: int,\r\n   *\t\t\t   ArtistName: string,\r\n   *\t\t\t   DateStart: int (as a year),\r\n   *\t\t\t   DateEnd: int (as a year),\r\n   *\t\t\t   ImageURL: string,\r\n   *\t\t\t   ArtistHref: string,\r\n   * \t\t\t }\r\n   *\r\n   * selectedAlbums[] where\r\n   * \tAlbum = {  AlbumId: int,\r\n   *\t\t\t   AlbumName: string,\r\n   *\t\t\t   AlbumType: string,\r\n   *\t\t\t   ReleaseDate: int (as a year),\r\n   *\t\t\t   AlbumHref: string,\r\n   * \t\t\t }\r\n   *\r\n   * selectedTracks[] where\r\n   * \tTrack = {  TrackId: int,\r\n   *\t\t\t   TrackName: string,\r\n   *\t\t\t   TrackHref: string,\r\n   * \t\t\t }\r\n   */\n\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_BIO\":\n      console.log(action.payload); //TODO: update values.\n\n      return _objectSpread({}, state, {\n        ArtistId: action.payload.ArtistId,\n        ArtistName: action.payload.ArtistName,\n        YearStart: action.payload.YearStart,\n        YearEnd: action.payload.YearEnd\n      });\n\n    case \"FETCH_SONGS\":\n      console.log(action.payload); //TODO: update values.\n\n      return _objectSpread({}, state, {\n        songs: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n}\n;","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/reducers/BioPane_Reducer.js"],"names":["initialState","ArtistId","ArtistName","YearStart","YearEnd","songs","state","action","type","console","log","payload"],"mappings":";;AAAA;;;;AAKA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,CAAC,CADS;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGjBC,EAAAA,SAAS,EAAE,CAHM;AAIpBC,EAAAA,OAAO,EAAE,CAJW;AAMpBC,EAAAA,KAAK,EAAE;AAGR;;;;;;;;;;;;;;;;;;;;;;;;AATqB,CAArB;AAgCA,eAAe,YAAyC;AAAA,MAA/BC,KAA+B,uEAAvBN,YAAuB;AAAA,MAATO,MAAS;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,WAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EADD,CAC8B;;AAC7B,+BAAYL,KAAZ;AACqBL,QAAAA,QAAQ,EAAEM,MAAM,CAACI,OAAP,CAAeV,QAD9C;AAEqBC,QAAAA,UAAU,EAAEK,MAAM,CAACI,OAAP,CAAeT,UAFhD;AAGqBC,QAAAA,SAAS,EAAEI,MAAM,CAACI,OAAP,CAAeR,SAH/C;AAIqBC,QAAAA,OAAO,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAJ7C;;AAMK,SAAK,aAAL;AACFK,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EADE,CAC2B;;AAC7B,+BAAYL,KAAZ;AAAmBD,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAAjC;;AACJ;AACC,aAAOL,KAAP;AAbF;;AAcC;AACD;AAAA","sourcesContent":["/*\r\n * Authors: Austin Vanburen\r\n * Description: Stored information for the BioPane component. Accessed via the properties set in the initialState.\r\n */\r\n\r\n//Data about an artist to be shown in the Bio Pane.\r\n// from Artist Table: ArtistId, DateStart, ArtistName, ImageURL, ArtistHref\r\n// selectedAlbums[]: AlbumId, AlbumType, AlbumHref, ReleaseDate, AlbumName\r\n// selectedTracks[]: TrackId, Href, TrackName\r\nconst initialState = {\r\n\tArtistId: -1,\r\n\tArtistName: '',\r\n    YearStart: 0,\r\n\tYearEnd: 0,\r\n\r\n\tsongs: [],\r\n}\r\n\r\n/* Data Retrieved:\r\n * \tArtist = { ArtistId: int,\r\n *\t\t\t   ArtistName: string,\r\n *\t\t\t   DateStart: int (as a year),\r\n *\t\t\t   DateEnd: int (as a year),\r\n *\t\t\t   ImageURL: string,\r\n *\t\t\t   ArtistHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedAlbums[] where\r\n * \tAlbum = {  AlbumId: int,\r\n *\t\t\t   AlbumName: string,\r\n *\t\t\t   AlbumType: string,\r\n *\t\t\t   ReleaseDate: int (as a year),\r\n *\t\t\t   AlbumHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedTracks[] where\r\n * \tTrack = {  TrackId: int,\r\n *\t\t\t   TrackName: string,\r\n *\t\t\t   TrackHref: string,\r\n * \t\t\t }\r\n */\r\nexport default function (state = initialState, action)  {\r\n\tswitch(action.type){\r\n\t\tcase \"FETCH_BIO\":\r\n\t\t\tconsole.log(action.payload); //TODO: update values.\r\n\t\t\treturn { ...state,\r\n                        ArtistId: action.payload.ArtistId,\r\n                        ArtistName: action.payload.ArtistName,\r\n                        YearStart: action.payload.YearStart,\r\n                        YearEnd: action.payload.YearEnd,\r\n                    };\r\n        case \"FETCH_SONGS\":\r\n    \t\tconsole.log(action.payload); //TODO: update values.\r\n    \t\treturn { ...state, songs: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}