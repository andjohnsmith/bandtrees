{"ast":null,"code":"/*\r\n * Authors: Austin Vanburen\r\n * Description: Actions for the ListOfArtists component.\r\n */\nimport axios from 'axios'; //Updates the string value represented in our search box and artists to their initial states.\n\nexport var clearSearch = function clearSearch() {\n  return {\n    type: \"CLEAR_SEARCH\",\n    payload: null\n  };\n};\n/* Loads selected artist bio into BioPane...\r\n * Data Sent:\r\n *\tartistId \r\n *\r\n * Data Retrieved:\r\n * \tArtist = { ArtistId: int,\r\n *\t\t\t   ArtistName: string,\r\n *\t\t\t   DateStart: int (as a year),\r\n *\t\t\t   DateEnd: int (as a year),\r\n *\t\t\t   ImageURL: string,\r\n *\t\t\t   ArtistHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedAlbums[] where\r\n * \tAlbum = {  AlbumId: int,\r\n *\t\t\t   AlbumName: string,\r\n *\t\t\t   AlbumType: string,\r\n *\t\t\t   ReleaseDate: int (as a year),\r\n *\t\t\t   AlbumHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedTracks[] where\r\n * \tTrack = {  TrackId: int,\r\n *\t\t\t   TrackName: string,\r\n *\t\t\t   TrackHref: string,\r\n * \t\t\t }\r\n */\n\nexport var fetchBio = function fetchBio(artistId) {\n  console.log(artistId);\n  return function (dispatch) {\n    axios.post('/bandtrees/api/v1/artists/' + artistId).then(function (res) {\n      dispatch(fetchBioSuccess(res.data));\n    }).catch(function (err) {//dispatch(activatePromotionFailure(err.message));\n    });\n  };\n};\n\nvar fetchBioSuccess = function fetchBioSuccess(artist) {\n  return {\n    type: \"FETCH_BIO\",\n    payload: artist\n  };\n};","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/actions/ListOfArtists_Actions.js"],"names":["axios","clearSearch","type","payload","fetchBio","artistId","console","log","dispatch","post","then","res","fetchBioSuccess","data","catch","err","artist"],"mappings":"AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO;AACNC,IAAAA,IAAI,EAAE,cADA;AAENC,IAAAA,OAAO,EAAE;AAFH,GAAP;AAID,CALM;AAOP;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO,UAAAG,QAAQ,EAAI;AAClBR,IAAAA,KAAK,CACHS,IADF,CACO,+BAA+BJ,QADtC,EAEEK,IAFF,CAEO,UAAAC,GAAG,EAAI;AACZH,MAAAA,QAAQ,CAACI,eAAe,CAACD,GAAG,CAACE,IAAL,CAAhB,CAAR;AACA,KAJF,EAKEC,KALF,CAKS,UAAAC,GAAG,EAAI,CACd;AACA,KAPF;AAQA,GATD;AAUA,CAZM;;AAcP,IAAMH,eAAe,GAAG,SAAlBA,eAAkB,CAACI,MAAD,EAAY;AAClC,SAAO;AACNd,IAAAA,IAAI,EAAE,WADA;AAENC,IAAAA,OAAO,EAAEa;AAFH,GAAP;AAID,CALD","sourcesContent":["/*\r\n * Authors: Austin Vanburen\r\n * Description: Actions for the ListOfArtists component.\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\n//Updates the string value represented in our search box and artists to their initial states.\r\nexport const clearSearch = () => {\r\n\t return {\r\n \t\ttype: \"CLEAR_SEARCH\",\r\n \t\tpayload: null,\r\n \t}\r\n};\r\n\r\n/* Loads selected artist bio into BioPane...\r\n * Data Sent:\r\n *\tartistId \r\n *\r\n * Data Retrieved:\r\n * \tArtist = { ArtistId: int,\r\n *\t\t\t   ArtistName: string,\r\n *\t\t\t   DateStart: int (as a year),\r\n *\t\t\t   DateEnd: int (as a year),\r\n *\t\t\t   ImageURL: string,\r\n *\t\t\t   ArtistHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedAlbums[] where\r\n * \tAlbum = {  AlbumId: int,\r\n *\t\t\t   AlbumName: string,\r\n *\t\t\t   AlbumType: string,\r\n *\t\t\t   ReleaseDate: int (as a year),\r\n *\t\t\t   AlbumHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedTracks[] where\r\n * \tTrack = {  TrackId: int,\r\n *\t\t\t   TrackName: string,\r\n *\t\t\t   TrackHref: string,\r\n * \t\t\t }\r\n */\r\nexport const fetchBio = (artistId) => {\r\n\tconsole.log(artistId);\r\n\treturn dispatch => {\r\n\t\taxios\r\n\t\t\t.post('/bandtrees/api/v1/artists/' + artistId)\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(fetchBioSuccess(res.data));\r\n\t\t\t})\r\n\t\t\t.catch (err => {\r\n\t\t\t\t//dispatch(activatePromotionFailure(err.message));\r\n\t\t\t})\r\n\t};\r\n};\r\n\r\nconst fetchBioSuccess = (artist) => {\r\n\t return {\r\n \t\ttype: \"FETCH_BIO\",\r\n \t\tpayload: artist,\r\n \t}\r\n};"]},"metadata":{},"sourceType":"module"}