{"ast":null,"code":"/*\r\n * Authors: Austin Vanburen\r\n * Description: Stored information for the BioPane component. Accessed via the properties set in the initialState.\r\n */\n//Data about an artist to be shown in the Bio Pane.\n// from Artist Table: ArtistId, DateStart, ArtistName, ImageURL, ArtistHref\n// selectedAlbums[]: AlbumId, AlbumType, AlbumHref, ReleaseDate, AlbumName\n// selectedTracks[]: TrackId, Href, TrackName\nvar initialState = {\n  ImageURL: '',\n  ArtistHref: '',\n  ArtistId: -1,\n  DateStart: 0,\n  DateEnd: 0,\n  ArtistName: 'Tom York',\n  selectedAlbums: [],\n  selectedTracks: []\n  /* Data Retrieved:\r\n   * \tArtist = { ArtistId: int,\r\n   *\t\t\t   ArtistName: string,\r\n   *\t\t\t   DateStart: int (as a year),\r\n   *\t\t\t   DateEnd: int (as a year),\r\n   *\t\t\t   ImageURL: string,\r\n   *\t\t\t   ArtistHref: string,\r\n   * \t\t\t }\r\n   *\r\n   * selectedAlbums[] where\r\n   * \tAlbum = {  AlbumId: int,\r\n   *\t\t\t   AlbumName: string,\r\n   *\t\t\t   AlbumType: string,\r\n   *\t\t\t   ReleaseDate: int (as a year),\r\n   *\t\t\t   AlbumHref: string,\r\n   * \t\t\t }\r\n   *\r\n   * selectedTracks[] where\r\n   * \tTrack = {  TrackId: int,\r\n   *\t\t\t   TrackName: string,\r\n   *\t\t\t   TrackHref: string,\r\n   * \t\t\t }\r\n   */\n\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_BIO\":\n      console.log(action.payload); //TODO: update values.\n\n      return state;\n\n    default:\n      return state;\n  }\n\n  ;\n}\n;","map":{"version":3,"sources":["/Users/asmith/Documents/cs364/bandtrees/client/src/reducers/BioPane_Reducer.js"],"names":["initialState","ImageURL","ArtistHref","ArtistId","DateStart","DateEnd","ArtistName","selectedAlbums","selectedTracks","state","action","type","console","log","payload"],"mappings":"AAAA;;;;AAKA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,QAAQ,EAAE,CAAC,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CAJS;AAKpBC,EAAAA,OAAO,EAAE,CALW;AAMpBC,EAAAA,UAAU,EAAE,UANQ;AAQpBC,EAAAA,cAAc,EAAE,EARI;AASpBC,EAAAA,cAAc,EAAE;AAGjB;;;;;;;;;;;;;;;;;;;;;;;;AAZqB,CAArB;AAmCA,eAAe,YAAyC;AAAA,MAA/BC,KAA+B,uEAAvBT,YAAuB;AAAA,MAATU,MAAS;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,WAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EADD,CAC8B;;AAC7B,aAAOL,KAAP;;AACD;AACC,aAAOA,KAAP;AALF;;AAMC;AACD;AAAA","sourcesContent":["/*\r\n * Authors: Austin Vanburen\r\n * Description: Stored information for the BioPane component. Accessed via the properties set in the initialState.\r\n */\r\n\r\n//Data about an artist to be shown in the Bio Pane.\r\n// from Artist Table: ArtistId, DateStart, ArtistName, ImageURL, ArtistHref\r\n// selectedAlbums[]: AlbumId, AlbumType, AlbumHref, ReleaseDate, AlbumName\r\n// selectedTracks[]: TrackId, Href, TrackName\r\nconst initialState = {\r\n\tImageURL: '',\r\n\tArtistHref: '',\r\n\tArtistId: -1,\r\n\tDateStart: 0,\r\n\tDateEnd: 0,\r\n\tArtistName: 'Tom York',\r\n\t\r\n\tselectedAlbums: [],\r\n\tselectedTracks: [],\r\n}\r\n\r\n/* Data Retrieved:\r\n * \tArtist = { ArtistId: int,\r\n *\t\t\t   ArtistName: string,\r\n *\t\t\t   DateStart: int (as a year),\r\n *\t\t\t   DateEnd: int (as a year),\r\n *\t\t\t   ImageURL: string,\r\n *\t\t\t   ArtistHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedAlbums[] where\r\n * \tAlbum = {  AlbumId: int,\r\n *\t\t\t   AlbumName: string,\r\n *\t\t\t   AlbumType: string,\r\n *\t\t\t   ReleaseDate: int (as a year),\r\n *\t\t\t   AlbumHref: string,\r\n * \t\t\t }\r\n *\r\n * selectedTracks[] where\r\n * \tTrack = {  TrackId: int,\r\n *\t\t\t   TrackName: string,\r\n *\t\t\t   TrackHref: string,\r\n * \t\t\t }\r\n */\r\nexport default function (state = initialState, action)  {\r\n\tswitch(action.type){\r\n\t\tcase \"FETCH_BIO\":\r\n\t\t\tconsole.log(action.payload); //TODO: update values.\r\n\t\t\treturn state;\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}